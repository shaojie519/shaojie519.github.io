<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Shaojie's Blog]]></title>
  <link href="http://www.shaojie.name/atom.xml" rel="self"/>
  <link href="http://www.shaojie.name/"/>
  <updated>2014-02-28T00:39:24+08:00</updated>
  <id>http://www.shaojie.name/</id>
  <author>
    <name><![CDATA[Shao jie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHub Search Syntax]]></title>
    <link href="http://www.shaojie.name/blog/2014/02/27/github-search-syntax/"/>
    <updated>2014-02-27T23:36:54+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/02/27/github-search-syntax</id>
    <content type="html"><![CDATA[<h3>Search Syntax</h3>

<p>如果你想精确的查找搜索结果，你可以一直使用<a href="http://www.shaojie.name/blog/2014/02/23/advanced-search/">高级搜索</a>,但是，使用正确的搜索语法可以帮助你更快速的找到你想要的结果，下面就介绍几种搜索语法。</p>

<h4>Greater Than Queries</h4>

<p>设想你想找所有与‘cats’有关的项目，而且筛选出它被用户标记星号(stars)的次数大于10次。你可以使用一些操作符帮助你完成。</p>

<p><p>><code>&gt;</code> 和 <code>&gt;=</code>符号代表“大于”和&#8221;大于等于&#8221;。例如下边的两个例子是等价的
<p>><code>cats stars:"&gt;10"</code>
<p>><code>cats stars:"&gt;=10"</code>
<br>
<br>
<p>>你也可以使用更加程序化的符号<code>..*</code>,它等价于<code>&gt;=</code>,代表查找所有大于等于10的。
<p>><code>cats stars:"10..*"</code>
<br>
<br></p>

<p><p>>符号<code>*</code>可以代表任意数字，所以<code>10 .. 50</code>等价于&#8221;所有大约等于10取小于等于50&#8221;。</p>

<h4>Less Than Queries</h4>

<p>如果你想找所有与‘cats’有关的项目，而且筛选出它被用户标记星号(stars)的次数小于10次。你可以使用类似的一些操作符帮助你完成。
<p>><code>&lt;</code> 和 <code>&lt;=</code>符号代表“小于”和&#8221;小于等于&#8221;。例如下边的两个例子是等价的
<p>><code>cats stars:"&lt;10"</code>
<p>><code>cats stars:"&lt;=9"</code>
<br>
<br>
<p>>你也可以使用更加程序化的符号<code>*..</code>,它等价于<code>&lt;=</code>,代表查找所有小等于10的。
<p>><code>cats stars:"*..10"</code>
<br>
<br></p>

<p><p>>符号<code>*</code>可以代表任意数字，所以<code>1 .. 10</code>等价于&#8221;所有大约等于1取小于等于10&#8221;。</p>

<h4>Range Queries</h4>

<p>当你要查找一些没有‘数量’标记的项目时，range查询这时就能显出2它的威力来了，比如你还是要查找与&#8217;cat&#8217;相关的项目，并且上次的更新时间在2014年1月低到今天的2014年2月28
<p>><code>cats pushed:2014-01-31..2014-02-28</code></p>

<p><br>
<br>
<br></p>

<h4>Omitting Spaces</h4>

<p>如果你更倾向更短的标记和更少的字符的话，你可以删除引号以及查询条件中多余的空格，仅当查询的条件中包含空格的时候才需要引号
<p>><code>cats stars:&gt;10</code>
<p>><code>cats stars:&lt;10</code>
<p>><code>cats pushed:2014-01-30..2014-02-28</code></p>

<h4>The power of NOT</h4>

<p>你可以使用<code>NOT</code>符号从你的搜索条件中排除关键字的项目，比如搜索···Hello···会返回很多包含<code>Hello World</code>相关的项目，但是如果在搜索条件中加入NOT像这样：
<p>><code>Hello NOT World</code>
<p>就会过滤掉排除包含<code>World</code>的。
<p><code>`NOT</code>符号只能用于String类型的关键字</p>

<h4>Filtering using Exclusion</h4>

<p>另一种缩小搜索范围的方式是排除子集。在搜索的条件的前面带上<code>-</code>，就能排除所有符合条件的结果集
<p>比如你想查找所有包含&#8217;cats&#8217;并且&#8217;stars&#8217;数量大于10并且不使用&#8217;javascript&#8217;
<p>><code>cats stars:&gt;10 -language:javascript</code></p>

<p><p>查找所有没有@defunkt的issues:
<p>><code>mentions:defunkt -user:github</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Github高级搜索]]></title>
    <link href="http://www.shaojie.name/blog/2014/02/23/advanced-search/"/>
    <updated>2014-02-23T01:24:57+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/02/23/advanced-search</id>
    <content type="html"><![CDATA[<h3>Advanced Search</h3>

<p>使用<a href="https://github.com/search/advanced">高级搜索</a>可以让你近一步缩小搜索范围，你可以通过stars数目、forks数目、文件后缀名等过滤。当你在条件输入框填写条件的时候，它会自动的把高级查询拼接到上面的输入框中。</p>

<p><img src="https://github-images.s3.amazonaws.com/help/search/advanced_search.png" alt="Github " /></p>

<h3>总结</h3>

<p>关于高级查询，我们可以指定很多的参数，以方便我们快速查询，下一篇介绍<a href="http://www.shaojie.name/blog/2014/02/27/github-search-syntax/">搜索语法</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Searching Github]]></title>
    <link href="http://www.shaojie.name/blog/2014/02/22/searching-github/"/>
    <updated>2014-02-22T23:41:43+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/02/22/searching-github</id>
    <content type="html"><![CDATA[<h3>Searching Github</h3>

<p><p>目前Gihtub上有数以万计的开源项目、用户、代码段，要想从中搜索到自己想要的真是件让人头疼的事情。幸好，有一些搜索技巧可以帮助你快速找到你的结果。</p>

<h3>Find all the Things</h3>

<p><a href="https://github.com/search">Github Search</a> 的功能是基于<a href="https://help.github.com/articles/using-the-command-bar">CommandBar</a>。你可以输入任何你想要的查询条件，它会把所有符合条件的结果高亮显示出来。你也可以点击左侧选择一种编程语言或者点击搜索结果项目列表来进一步缩小搜索范围。</p>

<p>在这个搜索引擎下，搜索就像一个弹性的搜索集合，当有push代码到Github你就可以实时的检索到它们。这些结果来自Github上的开源项目，也包括你有权限操作的私有项目。</p>

<p>为了让搜索关联性更加准确，Github很保守的给出搜索索引，例如，forks的项目一般是不会被搜索出来的，除非这个项目比原始项目有更多的stars。</p>

<p><img src="https://github-images.s3.amazonaws.com/help/search/search_overview.png" alt="Github " /></p>

<h3>搜索类型</h3>

<h4>项目（Repositories）</h4>

<p>每个搜索项目都有一个项目活动的展示，这个可以帮助你找到一些活跃的项目，当然也包括你的私有项目
当你的搜索结果很多足有好几页的搜索结果，你可以对这些结果按照条件进行排序以便更容易找到结果</p>

<p>关于更好的搜索项目相关说明，你查看<a href="http://www.shaojie.name/https://help.github.com/articles/searching-repositories">搜索项目</a></p>

<h4>问题(Issues)</h4>

<p>Issues search可以让你浏览所有的public的项目以及你有权限的私有项目的问答。你可以选择查看某个组织的问答，也可以选择与某个用户相关的问答。</p>

<p>更多关于如何查找问题。请查看<a href="http://www.shaojie.name/https://help.github.com/articles/searching-issues">搜索问题</a></p>

<h4>代码(code)</h4>

<p>代码搜索可以让你查看所有的public项目以及你有权限的私有项目的代码。你可以带上下边的参数</p>

<ul>
<li>搜索结果的行号</li>
<li>代码语法的高亮显示</li>
<li>上次检索时间</li>
<li>通过文件后缀查找</li>
<li>通过路径查找</li>
<li>只查找我自己的项目</li>
</ul>


<p>更多关于如何搜索代码，请查看<a href="http://www.shaojie.name/https://help.github.com/articles/searching-code">代码搜索</a></p>

<h4>用户(Users)</h4>

<p>用户搜索界面包含所有你要的一切：精确的结果、你可以直接Follow这些用户
更多关于如果搜索用户，请查看<a href="http://www.shaojie.name/https://help.github.com/articles/searching-users">搜索用户</a></p>

<h3>结果排序</h3>

<p>默认，Github搜索结果以搜索匹配(best match)降序排序的，当然你也可以选择其他的排序方式。比如，你可以现在按照 Star fork 数量排序。对于问答（Issues），你可以按照创建时间或者更新时间排序</p>

<h3>总结</h3>

<p>Github Seaching基本的内容介绍完了，下一篇<a href="http://www.shaojie.name/blog/2014/02/23/advanced-search/">高级搜索</a>;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建博客环境]]></title>
    <link href="http://www.shaojie.name/blog/2014/02/16/da-jian-bo-ke-huan-jing/"/>
    <updated>2014-02-16T00:33:40+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/02/16/da-jian-bo-ke-huan-jing</id>
    <content type="html"><![CDATA[<h3>1.Octopress需要Ruby环境，RVM(Ruby Version Manager)负责安装和管理Ruby的环境。所以我们先在终端输入如下命令，来安装RVM</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -L https://get.rvm.io | bash -s stable --ruby</span></code></pre></td></tr></table></div></figure>


<p>安装ruby1.9.3</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm install 1.9.3
</span><span class='line'>rvm use 1.9.3
</span><span class='line'>rvm rubygems lastest</span></code></pre></td></tr></table></div></figure>


<h3>2.安装Octpress</h3>

<p>在安装octpress之前，确保安装了git。
下载octpress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>cd octpress</span></code></pre></td></tr></table></div></figure>


<p>安装相关依赖</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>rbenv rehash
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>安装默认的Octpress主题</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<h3>3.将博客部署到Github上</h3>

<p>Github的Page service可以免费托管博客，并且还可以自定义域名。</p>

<p>首先需要在GitHub上创建一个仓库，并将仓库名称按照这样的方式进行命名：<code>username.github.com</code>或<code>organization.github.com</code>。等后面配置完毕之后，我们就可以在浏览器中使用页面地址<code>http://username.github.com</code>来访问我们的博客。一般来说，我们希望在将博客的源码放到source分支下，并把生成的内容提交到master分支。</p>

<p>创建好仓库之后，我们需要利用octopress的一个配置rake任务来自动配置上面创建的仓库：可以让我们方便的部署GitHub page。在终端输入如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>完成上面的命令之后，我们就可以生成博客并真正的部署到仓库中了。执行如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>现在可以访问<code>http://username.github.com</code>了。注意：有时候可能会有延时，要等等10分钟左右才能打开。</p>

<p>不过博客的source需要单独提交，执行如下命令就可以将source提交到仓库的source分支下。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git add .
</span><span class='line'>git commit -m 'Initial souece comment'
</span><span class='line'>git push origin source</span></code></pre></td></tr></table></div></figure>


<p>如果在部署到仓库之前，需要先预览一下博客，可以在终端输入</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>然后就能在浏览器中进行本地预览访问了：<code>http://127.0.0.1:4000/</code>或<code>http://localhost:4000/</code>，效果跟仓库中的一样。</p>

<h3>4.开始写博客</h3>

<p>新建一篇文章</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake 'new_post[title]'
</span><span class='line'>其中title为博文的文件名，创建出来的文件默认是markdown格式。上面的命令会创建出这样一个文件：source/_posts/2014-2-16-title.markdown</span></code></pre></td></tr></table></div></figure>


<p>打开这篇文章，可以看到</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: title
</span><span class='line'>date: 2014-0-16 00:33:40 +0800
</span><span class='line'>comments: true
</span><span class='line'>categoryies:
</span><span class='line'>---</span></code></pre></td></tr></table></div></figure>


<p>categories 填写文章的分类名</p>

<p>接着我们就可以在这个文件中写我们的博文。完成之后，我们可以预览和部署博文。下面是创建并部署博文的一个完整过程</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake 'new_post[title]'
</span><span class='line'>rake generate
</span><span class='line'>git add .
</span><span class='line'>git commit -am "add new post"
</span><span class='line'>git push origin source
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>5.添加分类列表</h3>

<p>保存一下代码到 plugins/category_list_tag.rb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module Jekyll
</span><span class='line'>  class CategoryListTag &lt; Liquid::Tag
</span><span class='line'>    def render(context)
</span><span class='line'>      html = ""
</span><span class='line'>      categories = context.registers[:site].categories.keys
</span><span class='line'>      categories.sort.each do |category|
</span><span class='line'>        posts_in_category = context.registers[:site].categories[category].size
</span><span class='line'>        category_dir = context.registers[:site].config['category_dir']
</span><span class='line'>        category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
</span><span class='line'>        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://www.shaojie.name/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
</span><span class='line'>      end
</span><span class='line'>      html
</span><span class='line'>    end
</span><span class='line'>  end
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)</span></code></pre></td></tr></table></div></figure>


<p>这个插件会向liquid注册一个名为category_list的tag，该tag就是以li的形式将站点所有的category组织起来。如果要将category加入到侧边导航栏，需要增加一个aside。
增加aside
复制以下代码到source/_includes/asides/category_list.html。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;Categories&lt;/h1&gt;
</span><span class='line'>  &lt;ul id="categories"&gt;
</span><span class='line'>    {% category_list %}
</span><span class='line'>  &lt;/ul&gt;
</span><span class='line'>&lt;/section&gt;
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<p>配置侧边栏需要修改_config.yml文件，修改其default_asides项:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>default_asides: [asides/category_list.html, asides/recent_posts.html]</span></code></pre></td></tr></table></div></figure>


<h3>6.添加微博秀</h3>

<p>先到微博秀里面生成自己的微博秀嵌入代码</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;iframe width="100%"
</span><span class='line'> height="550" 
</span><span class='line'> class="share_self"  
</span><span class='line'> frameborder="0" 
</span><span class='line'> scrolling="no" 
</span><span class='line'> src="http://widget.weibo.com/weiboshow/index.php?language=&width=0&height=550&fansRow=2
</span><span class='line'>&ptype=1&speed=0&skin=1&isTitle=1&noborder=1
</span><span class='line'>&isWeibo=1&isFans=1&uid=1706688983
</span><span class='line'>&verifier=1a722b18&dpc=1"&gt;
</span><span class='line'>&lt;/iframe&gt;</span></code></pre></td></tr></table></div></figure>


<p>新建一个weibo.html 到source/_include/asides的下面</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>{% if site.weibo_uid %}
</span><span class='line'>&lt;section&gt;
</span><span class='line'>  &lt;h1&gt;新浪微博&lt;/h1&gt;
</span><span class='line'>  &lt;ul id="weibo"&gt;
</span><span class='line'>    &lt;li&gt;
</span><span class='line'>      &lt;iframe 
</span><span class='line'>        width="100%" 
</span><span class='line'>        height="550" 
</span><span class='line'>        class="share_self" 
</span><span class='line'>        frameborder="0" 
</span><span class='line'>        scrolling="no" 
</span><span class='line'>        src="http://widget.weibo.com/weiboshow/index.php?width=0&height=550
</span><span class='line'>        &ptype={% if site.weibo_pic %}1{% else %}0{% endif %}&speed=0&skin={{weibo_skin}}&isTitle=0&noborder=1
</span><span class='line'>&isWeibo={% if site.weibo_show %}1{% else %}0{% endif %}&isFans={{weibo_fansline}}&uid={{site.weibo_uid}}&verifier={{site.weibo_verifier}}"&gt;
</span><span class='line'>      &lt;/iframe&gt;
</span><span class='line'>    &lt;/li&gt;
</span><span class='line'>  &lt;/ul&gt;
</span><span class='line'>&lt;/section&gt;
</span><span class='line'>{% endif %}
</span><span class='line'></span></code></pre></td></tr></table></div></figure>


<p>修改_config.xml中default_aside部分</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>... 
</span><span class='line'>default_asides: [asides/recent_posts.html, asides/weibo.html, asides/github.html, asides/[Twitter][].html, asides/googleplus.html]
</span><span class='line'>...
</span><span class='line'>weibo_uid: 1098907490
</span><span class='line'>weibo_verifier: abd54ad9
</span><span class='line'>weibo_fansline: 0   # 粉丝显示多少行
</span><span class='line'>weibo_show: true    # 是否显示最近微博内容
</span><span class='line'>weibo_pic: true     # 是否显示微博中的图片
</span><span class='line'>weibo_skin: 10      # 使用哪种配色风格，数字为从1开始的微博秀风格序号
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<h3>7.评论和分享</h3>

<p>在<em>config.yml中增加一项： weibo_share: true
修改 source/</em>includes/post/sharing.html ，增加：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>{% if site.weibo_share %}
</span><span class='line'>     {% include post/weibo.html %}
</span><span class='line'> {% endif %}
</span><span class='line'> </span></code></pre></td></tr></table></div></figure>


<p>增加文件：source/_includes/post/weibo.html</p>

<p>访问<a href="http://www.jiathis.com/">http://www.jiathis.com/</a> , 获取分享的代码</p>

<p>访问<a href="http://uyan.cc/,">http://uyan.cc/,</a> 获取评论的代码</p>

<p>把代码都加到weibo.html中</p>
]]></content>
  </entry>
  
</feed>
