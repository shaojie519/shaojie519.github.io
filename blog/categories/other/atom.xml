<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Other | Shaojie's Blog]]></title>
  <link href="http://www.shaojie.name/blog/categories/other/atom.xml" rel="self"/>
  <link href="http://www.shaojie.name/"/>
  <updated>2016-01-06T22:47:00+08:00</updated>
  <id>http://www.shaojie.name/</id>
  <author>
    <name><![CDATA[Shao jie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[不要做一个浮躁的程序员]]></title>
    <link href="http://www.shaojie.name/blog/2014/05/05/chengxuyuan/"/>
    <updated>2014-05-05T22:57:51+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/05/05/chengxuyuan</id>
    <content type="html"><![CDATA[<ul>
<li><p>1.不要看到别人的回复第一句话就说：给个代码吧！你应该想想为什么。当你自己想出来再参考别人的提示，你就知道自己和别人思路的差异。</p></li>
<li><p>2.初学者请不要看太多太多的书那会误人子弟的，先找本系统的学，很多人用了很久都是只对部分功能熟悉而已，不系统还是不够的。</p></li>
<li><p>3.看帮助,不要因为很难而自己是初学者所以就不看；帮助永远是最好的参考手册，虽然帮助的文字有时候很难看懂，总觉得不够直观。</p></li>
<li><p>4.不要被对象、属性、方法等词汇所迷惑；最根本的是先了解最基础知识。</p></li>
<li><p>5.不要放过任何一个看上去很简单的小问题–他们往往并不那么简单，或者可以引伸出很多知识点；不会举一反三你就永远学不会。</p></li>
<li><p>6.知道一点东西，并不能说明你会写脚本，脚本是需要经验积累的。</p></li>
<li><p>7.学脚本并不难，JSP、ASP、PHP等等也不过如此–难的是长期坚持实践和不遗余力的博览群书；</p></li>
<li><p>8.看再多的书是学不全脚本的，要多实践。</p></li>
<li><p>9.把时髦的技术挂在嘴边，还不如把过时的技术记在心里；</p></li>
<li><p>10.学习脚本最好的方法之一就是多练习；</p></li>
<li><p>11.在任何时刻都不要认为自己手中的书已经足够了；</p></li>
<li><p>12.看得懂的书，请仔细看；看不懂的书，请硬着头皮看；</p></li>
<li><p>13.别指望看第一遍书就能记住和掌握什么——请看第二遍、第三遍；</p></li>
<li><p>14.请把书上的例子亲手到电脑上实践，即使配套光盘中有源文件；</p></li>
<li><p>15.把在书中看到的有意义的例子扩充；并将其切实的运用到自己的工作中；</p></li>
<li><p>16.不要漏掉书中任何一个练习——请全部做完并记录下思路；</p></li>
<li><p>17.当你用脚本到一半却发现自己用的方法很拙劣时，请不要马上停手；请尽快将余下的部分粗略的完成以保证这个代码的完整性，然后分析自己的错误并重新编写和工作。</p></li>
<li><p>18.别心急，写脚本确实不容易；水平是在不断的实践中完善和发展的；</p></li>
<li><p>19.每学到一个脚本难点的时候，尝试着对别人讲解这个知识点并让他理解—-你能讲清楚才说明你真的理解了；</p></li>
<li><p>20.记录下在和别人交流时发现的自己忽视或不理解的知识点；</p></li>
<li><p>21.保存好你做过的所有的源文件—-那是你最好的积累之一；</p></li>
<li><p>22.对于网络，还是希望大家能多利用一下，很多问题不是非要到论坛来问的，首先你要学会自己找答案，比如google、百度都是很好的搜索引擎，你只要输入关键字就能找到很多相关资料，别老是等待别人给你希望，看的出你平时一定也很懒！</p></li>
<li><p>23.到一个论坛，你学会去看以前的帖子，不要什么都不看就发帖子问，也许你的问题早就有人问过了，你再问，别人已经不想再重复了，做为初学者，谁也不希望自己的帖子没人回的。</p></li>
<li><p>24.虽然不是打击初学者，但是这句话还是要说：论坛论坛，就是大家讨论的地方，如果你总期望有高手总无偿指点你，除非他是你亲戚！！讨论者，起码是 水平相当的才有讨论的说法，如果水平真差距太远了，连基本操作都需要别人给解答，谁还跟你讨论呢。能找到很多相关资料，别老是等待别人给你希望，看的出你 平时一定也很懒！</p></li>
</ul>


<p><p></p>

<pre><code>浮躁的人容易问：我到底该学什么；—-别问，学就对了；   

浮躁的人容易问：JS有钱途吗；—-建议你去抢银行；   

浮躁的人容易说：我要中文版！我英文不行！—-不行？学呀！   

浮躁的人分两种：只观望而不学的人；只学而不坚持的人；   

浮躁的人永远不是一个高手。
</code></pre>

<p>来自互联网，共勉</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[十四个很准的心里暗示]]></title>
    <link href="http://www.shaojie.name/blog/2014/03/24/4/"/>
    <updated>2014-03-24T23:05:55+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/03/24/4</id>
    <content type="html"><![CDATA[<p>1、当你对某件事情抱着百分之一万的相信，它最后就会变成事实。</p>

<p>2、期望定律 期望定律告诉我们，当我们怀着对某件事情非常强烈期望的时候，我们所期望的事物就会出现。</p>

<p>3、情绪定律 情绪定律告诉我们，人百分之百是情绪化的。即使有人说某人很理性，其实当这个人很有"理性"地思考问题的时候，也是受到他当时情绪状态的影响，"理性地思考"本身也是一种情绪状态。所以人百分之百是情绪化的动物，而且任何时候的决定都是情绪化的决定。</p>

<p>4、因果定律 任何事情的发生，都有其必然的原因。有因才有果。换句话说，当你看到任何现象的时候，你不用觉得不可理解或者奇怪，因为任何事情的发生都必有其原因。你今天的现状结果是你过去种下的因导致的结果。</p>

<p>5、吸引定律 当你的思想专注在某一领域的时候，跟这个领域相关的人、事、物就会被你吸引而来。</p>

<p> 6、重复定律 任何的行为和思维，只要你不断的重复就会得到不断的加强。在你的潜意识当中，只要你能够不断地重复一些人、事、物，它们都会在潜意识里变成事实。</p>

<p> 7、累积定律 很多年轻人都曾梦想做一番大事业，其实天下并没有什么大事可做，有的只是小事。一件一件小事累积起来就形成了大事。任何大成就或者大灾难都是累积的结果。</p>

<p>8、辐射定律 当你做一件事情的时候，影响的并不只是这件事情的本身，它还会辐射到相关的其他领域。任何事情都有辐射作用。</p>

<p>9、相关定律 相关定律告诉我们：这个世界上的每一件事情之间都有一定的联系，没有一件事情是完全独立的。要解决某个难题最好从其他相关的某个地方人手，而不只是专注在一个困难点上。</p>

<p> 10、专精定律 专精定律告诉我们，只有专精在一个领域，这个领域才能有所发展。所以无论你做任何的行业都要把做该行业的最顶尖为目标，只有当你能够专精的时候，你所做的领域才会出类拔萃地成长。</p>

<p> 11、替换定律 替换定律就是说，当我们有一项不想要的记忆或者是负面的习惯，我们是无法完全去除掉，只能用一种新的记忆或新的习惯去替换他。</p>

<p> 12、惯性定律 任何事情只要你能够持续不断去加强它，它终究会变成一种习惯。</p>

<p>13、显现定律 显现定律就是说，当我们持续寻找、追问答案的时候，它们最终都必将显现。</p>

<p> 14、需求定律 任何人做任何事情都是带有一种需求。尊重并满足对方的需求，别人才会尊重我们的需求</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搭建博客环境]]></title>
    <link href="http://www.shaojie.name/blog/2014/02/16/da-jian-bo-ke-huan-jing/"/>
    <updated>2014-02-16T00:33:40+08:00</updated>
    <id>http://www.shaojie.name/blog/2014/02/16/da-jian-bo-ke-huan-jing</id>
    <content type="html"><![CDATA[<h3>1.Octopress需要Ruby环境，RVM(Ruby Version Manager)负责安装和管理Ruby的环境。所以我们先在终端输入如下命令，来安装RVM</h3>

<p><code>
curl -L https://get.rvm.io | bash -s stable --ruby
</code>
安装ruby1.9.3
<code>
rvm install 1.9.3
rvm use 1.9.3
rvm rubygems lastest
</code></p>

<h3>2.安装Octpress</h3>

<p>在安装octpress之前，确保安装了git。
下载octpress
<code>
git clone git://github.com/imathis/octopress.git octopress
cd octpress
</code>
安装相关依赖
<code>
gem install bundler
rbenv rehash
bundle install
</code>
安装默认的Octpress主题
<code>
rake install
</code></p>

<h3>3.将博客部署到Github上</h3>

<p>Github的Page service可以免费托管博客，并且还可以自定义域名。</p>

<p>首先需要在GitHub上创建一个仓库，并将仓库名称按照这样的方式进行命名：<code>username.github.com</code>或<code>organization.github.com</code>。等后面配置完毕之后，我们就可以在浏览器中使用页面地址<code>http://username.github.com</code>来访问我们的博客。一般来说，我们希望在将博客的源码放到source分支下，并把生成的内容提交到master分支。</p>

<p>创建好仓库之后，我们需要利用octopress的一个配置rake任务来自动配置上面创建的仓库：可以让我们方便的部署GitHub page。在终端输入如下命令：
<code>
rake setup_github_pages
</code>
完成上面的命令之后，我们就可以生成博客并真正的部署到仓库中了。执行如下命令：
<code>
rake generate
rake deploy
</code>
现在可以访问<code>http://username.github.com</code>了。注意：有时候可能会有延时，要等等10分钟左右才能打开。</p>

<p>不过博客的source需要单独提交，执行如下命令就可以将source提交到仓库的source分支下。
<code>
git add .
git commit -m 'Initial souece comment'
git push origin source
</code>
如果在部署到仓库之前，需要先预览一下博客，可以在终端输入
<code>
rake preview
</code>
然后就能在浏览器中进行本地预览访问了：<code>http://127.0.0.1:4000/</code>或<code>http://localhost:4000/</code>，效果跟仓库中的一样。</p>

<h3>4.开始写博客</h3>

<p>新建一篇文章
<code>
rake 'new_post[title]'
其中title为博文的文件名，创建出来的文件默认是markdown格式。上面的命令会创建出这样一个文件：source/_posts/2014-2-16-title.markdown
</code>
打开这篇文章，可以看到</p>

<h2>```</h2>

<p>layout: post
title: title
date: 2014-0-16 00:33:40 +0800
comments: true</p>

<h2>categoryies:</h2>

<p>```
categories 填写文章的分类名</p>

<p>接着我们就可以在这个文件中写我们的博文。完成之后，我们可以预览和部署博文。下面是创建并部署博文的一个完整过程
<code>
rake 'new_post[title]'
rake generate
git add .
git commit -am "add new post"
git push origin source
rake deploy
</code></p>

<h3>5.添加分类列表</h3>

<p>保存一下代码到 plugins/category_list_tag.rb:
```
module Jekyll
  class CategoryListTag &lt; Liquid::Tag</p>

<pre><code>def render(context)
  html = ""
  categories = context.registers[:site].categories.keys
  categories.sort.each do |category|
    posts_in_category = context.registers[:site].categories[category].size
    category_dir = context.registers[:site].config['category_dir']
    category_url = File.join(category_dir, category.gsub(/_|\P{Word}/, '-').gsub(/-{2,}/, '-').downcase)
    html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://www.shaojie.name/#{category_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
  end
  html
end
</code></pre>

<p>  end
end</p>

<p>Liquid::Template.register_tag(&lsquo;category_list&rsquo;, Jekyll::CategoryListTag)
```</p>

<p>这个插件会向liquid注册一个名为category_list的tag，该tag就是以li的形式将站点所有的category组织起来。如果要将category加入到侧边导航栏，需要增加一个aside。
增加aside
复制以下代码到source/_includes/asides/category_list.html。
```

<section>
  <h1>Categories</h1>
  <ul id="categories"></p>

<pre><code>{% category_list %}
</code></pre>

<p>  </ul>
</section>

```</p>

<p>配置侧边栏需要修改_config.yml文件，修改其default_asides项:
<code>
default_asides: [asides/category_list.html, asides/recent_posts.html]
</code></p>

<h3>6.添加微博秀</h3>

<p>先到微博秀里面生成自己的微博秀嵌入代码
```</p>

<iframe width="100%"
 height="550" 
 class="share_self"  
 frameborder="0" 
 scrolling="no" 
 src="http://widget.weibo.com/weiboshow/index.php?language=&width=0&height=550&fansRow=2
&ptype=1&speed=0&skin=1&isTitle=1&noborder=1
&isWeibo=1&isFans=1&uid=1706688983
&verifier=1a722b18&dpc=1">
</iframe>


<p>```</p>

<p>新建一个weibo.html 到source/_include/asides的下面
```

{% if site.weibo_uid %}
<section>
  <h1>新浪微博</h1>
  <ul id="weibo"></p>

<pre><code>&lt;li&gt;
  &lt;iframe 
    width="100%" 
    height="550" 
    class="share_self" 
    frameborder="0" 
    scrolling="no" 
    src="http://widget.weibo.com/weiboshow/index.php?width=0&amp;height=550
    &amp;ptype={% if site.weibo_pic %}1{% else %}0{% endif %}&amp;speed=0&amp;skin={{weibo_skin}}&amp;isTitle=0&amp;noborder=1
</code></pre>

<p>&amp;isWeibo={% if site.weibo_show %}1{% else %}0{% endif %}&amp;isFans={{weibo_fansline}}&amp;uid={{site.weibo_uid}}&amp;verifier={{site.weibo_verifier}}&ldquo;></p>

<pre><code>  &lt;/iframe&gt;
&lt;/li&gt;
</code></pre>

<p>  </ul>
</section>
{% endif %}

<code>
修改_config.xml中default_aside部分
</code>
&hellip;
default_asides: [asides/recent_posts.html, asides/weibo.html, asides/github.html, asides/[Twitter][].html, asides/googleplus.html]
&hellip;
weibo_uid: 1098907490
weibo_verifier: abd54ad9
weibo_fansline: 0   # 粉丝显示多少行
weibo_show: true    # 是否显示最近微博内容
weibo_pic: true     # 是否显示微博中的图片
weibo_skin: 10      # 使用哪种配色风格，数字为从1开始的微博秀风格序号
&hellip;
```</p>

<h3>7.评论和分享</h3>

<p>在<em>config.yml中增加一项： weibo_share: true
修改 source/</em>includes/post/sharing.html ，增加：
```

{% if site.weibo_share %}</p>

<pre><code> {% include post/weibo.html %}
</code></pre>

<p> {% endif %}
 
```
增加文件：source/_includes/post/weibo.html</p>

<p>访问<a href="http://www.jiathis.com/">http://www.jiathis.com/</a> , 获取分享的代码</p>

<p>访问<a href="http://uyan.cc/,">http://uyan.cc/,</a> 获取评论的代码</p>

<p>把代码都加到weibo.html中</p>
]]></content>
  </entry>
  
</feed>
